plan design patterns

Update plan.md to discuss the pros and cons of different design
patterns we could use in migrating from the legacy OpenAI-specific
code to a more general design that can support multiple chat
providers.  Make recommendations.

There is a partial implementation of the new chat client interface and
the OpenAI and Perplexity in v3/client/chatclient.go,
v3/openai/openai.go, and v3/perplexity/perplexity.go, but these are
not yet used in the code and may not be the right design or even
package structure.

In: 
    .aidda/plan.md
    v3/util/util.go
    v3/cli/chat_test.go
    v3/cli/cli.go
    v3/cli/cli_test.go
    v3/cli/migration_test.go
    v3/lang/go/split.go
    v3/lang/go/split_test.go
    v3/core/grokker_test.go
    v3/core/chunk.go
    v3/core/chat.go
    v3/core/migrate.go
    v3/core/grokker.go
    v3/core/openai.go
    v3/core/git.go
    v3/core/model.go
    v3/core/api.go
    v3/core/document.go
    v3/cmd/grok/main.go
    v3/aidda/aidda_test.go
    v3/aidda/cmd/aidda3/main.go
    v3/aidda/run.go
    v3/aidda/aidda.go
    x/perplexity-example.go
    v3/client/chatclient.go
    v3/openai/openai.go
    v3/perplexity/perplexity.go
    x/patterns.md
Out:
    .aidda/plan.md
