The empty square brackets are coming from the way the prompt is formatted when a selection isn’t provided. In sendQueryToLLM the prompt is always built using a format string that appends " [%s]". Even if selection is empty, that pair of brackets is still there. That empty pair can then bleed into the generated markdown.

To fix this, you can build the prompt so that the " [%s]" is only appended if selection isn’t empty. For example, change the part in sendQueryToLLM where prompt is built. Here’s one way to adjust it:

--------------------
// sendQueryToLLM calls the Grokker API to obtain a markdown-formatted text.
func sendQueryToLLM(query string, llm string, selection, backgroundContext string) string {
	sysmsg := fmt.Sprintf("You are a researcher.  I will start my prompt with some context, followed by a query.  Answer the query -- don't answer other questions you might see elsewhere in the context.  Always enclose reference numbers in square brackets; ignore empty brackets in the prompt or context, and DO NOT INCLUDE EMPTY SQUARE BRACKETS in your response, regardless of what you see in the context.  Always start your response with a markdown heading.")

	// Build the prompt: only add selection if it is not empty.
	prompt := fmt.Sprintf("---CONTEXT START---\n%s\n---CONTEXT END---\n\nNew Query: %s", backgroundContext, query)
	if selection != "" {
		prompt += fmt.Sprintf(" [%s]", selection)
	}

	msgs := []client.ChatMsg{
		{Role: "USER", Content: prompt},
	}

	var inputFiles []string
	var outFiles []core.FileLang

	fmt.Printf("Sending query to LLM '%s'\n", llm)
	fmt.Printf("Query: %s\n", query)
	response, _, err := grok.SendWithFiles(llm, sysmsg, msgs, inputFiles, outFiles)
	if err != nil {
		log.Printf("SendWithFiles error: %v", err)
		return fmt.Sprintf("Error sending query: %v", err)
	}
	fmt.Printf("Received response from LLM '%s'\n", llm)
	fmt.Printf("Response: %s\n", response[:10]) // print first 10 characters of response
	return response
}
--------------------

With this change the prompt won’t include empty square brackets when selection is empty, so your markdown won’t have them unexpectedly.

This adjustment should compile and run as before without inadvertently adding empty “[]” in your markdown output.